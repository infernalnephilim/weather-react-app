{"version":3,"sources":["components/Header.js","components/Form.js","components/Weather.js","components/Footer.js","App.js","components/Loader.js","serviceWorker.js","index.js","logo.svg"],"names":["Header","react_default","a","createElement","className","src","Component","Form","onSubmit","this","props","getWeather","type","name","Weather","error","weather","city","country","icon","concat","temperature","description","temp_min","temp_max","pressure","humidity","Footer","API_KEY","App","state","undefined","_callee","e","apiCall","data","regenerator_default","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","sent","json","hasOwnProperty","cod","_this","setState","console","log","sys","main","temp","stop","components_Header","components_Form","components_Weather","components_Footer","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"iQAceA,8LARP,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdH,EAAAC,EAAAC,cAAA,yBAAoBF,EAAAC,EAAAC,cAAA,OAAKE,IAAI,wBAJxBC,cCuBNC,mLArBP,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBI,SAAUC,KAAKC,MAAMC,YACnDV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SAAOS,KAAK,OAAOC,KAAK,UAE5BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,yBAEAF,EAAAC,EAAAC,cAAA,SAAOS,KAAK,OAAOC,KAAK,aAE5BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,wCAfLG,aCiDJQ,mLA/CP,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACVK,KAAKC,MAAMK,OACZd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,8BADjB,IACmDK,KAAKC,MAAMK,OAE9Dd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACVK,KAAKC,MAAMM,QAAQC,MAAQR,KAAKC,MAAMM,QAAQE,SAC/CjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACVK,KAAKC,MAAMM,QAAQC,KADxB,KACgCR,KAAKC,MAAMM,QAAQE,SAElDT,KAAKC,MAAMM,QAAQG,MACpBlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAG,mCAAAe,OAAqCX,KAAKC,MAAMM,QAAQG,KAAxD,WAEXV,KAAKC,MAAMM,QAAQK,aACpBpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACVK,KAAKC,MAAMM,QAAQK,YADxB,UAGCZ,KAAKC,MAAMM,QAAQM,aACpBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oDACVK,KAAKC,MAAMM,QAAQM,cAG5BrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACVK,KAAKC,MAAMM,QAAQO,UACpBtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,qBACuBK,KAAKC,MAAMM,QAAQO,SAD1C,UAGCd,KAAKC,MAAMM,QAAQQ,UACpBvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,qBACuBK,KAAKC,MAAMM,QAAQQ,SAD1C,UAGCf,KAAKC,MAAMM,QAAQS,UACpBxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,aACeK,KAAKC,MAAMM,QAAQS,SADlC,QAGChB,KAAKC,MAAMM,QAAQU,UACpBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDAAf,aACeK,KAAKC,MAAMM,QAAQU,SADlC,eAxCEpB,aCUPqB,mLARP,OACI1B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBACdH,EAAAC,EAAAC,cAAA,qDAJKG,aCMfsB,GCNetB,YDML,oCA0FDuB,6MAvFXC,MAAQ,CACJd,QAAS,CACLC,UAAMc,EACNb,aAASa,EACTV,iBAAaU,EACbR,cAAUQ,EACVP,cAAUO,EACVN,cAAUM,EACVL,cAAUK,EACVT,iBAAaS,EACbZ,UAAMY,GAEVhB,WAAOgB,KAGXpB,iDAAa,SAAAqB,EAAOC,GAAP,IAAAhB,EAAAC,EAAAgB,EAAAC,EAAA,OAAAC,EAAAlC,EAAAmC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTP,EAAEQ,iBACIxB,EAAOgB,EAAES,OAAOC,SAAS1B,KAAK2B,MAC9B1B,EAAUe,EAAES,OAAOC,SAASzB,QAAQ0B,OACtC3B,IAAQC,EAJH,CAAAoB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKiBK,MAAK,qDAAAzB,OAAsDH,EAAtD,KAAAG,OAA8DF,EAA9D,WAAAE,OAA+EQ,EAA/E,kBALtB,cAKCM,EALDI,EAAAQ,KAAAR,EAAAE,KAAA,EAMcN,EAAQa,OANtB,QAMCZ,EANDG,EAAAQ,MAOGE,eAAe,QAAuB,QAAbb,EAAKc,IAClCC,EAAKC,SAAS,CACVnC,QAAS,CACLC,UAAMc,EACNb,aAASa,EACTV,iBAAaU,EACbR,cAAUQ,EACVP,cAAUO,EACVN,cAAUM,EACVL,cAAUK,EACVT,iBAAaS,EACbZ,UAAMY,GAEVhB,MAAO,yDAGXqC,QAAQC,IAAIlB,GACZe,EAAKC,SAAS,CACVnC,QAAS,CACLC,KAAMkB,EAAKtB,KACXK,QAASiB,EAAKmB,IAAIpC,QAClBG,YAAac,EAAKoB,KAAKC,KACvBjC,SAAUY,EAAKoB,KAAKhC,SACpBC,SAAUW,EAAKoB,KAAK/B,SACpBC,SAAUU,EAAKoB,KAAK9B,SACpBC,SAAUS,EAAKoB,KAAK7B,SACpBJ,YAAaa,EAAKnB,QAAQ,GAAGM,YAC7BH,KAAMgB,EAAKnB,QAAQ,GAAGG,MAE1BJ,WAAOgB,KApCVO,EAAAE,KAAA,iBAyCLU,EAAKC,SAAS,CACVnC,QAAS,CACLC,UAAMc,EACNb,aAASa,EACTV,iBAAaU,EACbR,cAAUQ,EACVP,cAAUO,EACVN,cAAUM,EACVL,cAAUK,EACVT,iBAAaS,EACbZ,UAAMY,GAEVhB,MAAO,8BArDN,yBAAAuB,EAAAmB,SAAAzB,EAAAvB,uIA2DT,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACuD,EAAD,MACAzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACwD,EAAD,CAAMhD,WAAYF,KAAKE,aACvBV,EAAAC,EAAAC,cAACyD,EAAD,CAAS5C,QAASP,KAAKqB,MAAMd,QAASD,MAAON,KAAKqB,MAAMf,SAE5Dd,EAAAC,EAAAC,cAAC0D,EAAD,cAlFEC,IAAMxD,WEAJyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpE,EAAAC,EAAAC,cAACmE,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCE/HnBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.c359f82a.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"WeatherApp__header\">\r\n                <h1>Weather App</h1><img src=\"favicon.png\"/>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, {Component} from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nclass Form extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"WeatherApp__form\">\r\n                <form className=\"WeatherApp-form\" onSubmit={this.props.getWeather}>\r\n                    <div className=\"WeatherApp-form__row\">\r\n                        <label>City:</label>\r\n                        <input type=\"text\" name=\"city\"/>\r\n                    </div>\r\n                    <div className=\"WeatherApp-form__row\">\r\n                        <label>Country:</label>\r\n\r\n                        <input type=\"text\" name=\"country\"/>\r\n                    </div>\r\n                    <div className=\"WeatherApp-form__row\">\r\n                        <button>Show weather</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, {Component} from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nclass Weather extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"WeatherData\">\r\n                {this.props.error &&\r\n                <div className=\"WeatherData__item WeatherData__item--error\">\r\n                    <i className=\"fas fa-exclamation-circle\"></i> {this.props.error}\r\n                </div>}\r\n                <div className=\"WeatherData__col\">\r\n                    {this.props.weather.city && this.props.weather.country &&\r\n                    <div className=\"WeatherData__item WeatherData__item--location\">\r\n                        {this.props.weather.city}, {this.props.weather.country}\r\n                    </div>}\r\n                    {this.props.weather.icon &&\r\n                    <div className=\"WeatherData__item WeatherData__item--icon\">\r\n                        <img src={`http://openweathermap.org/img/w/${this.props.weather.icon}.png`}/>\r\n                    </div>}\r\n                    {this.props.weather.temperature &&\r\n                    <div className=\"WeatherData__item WeatherData__item--temperature\">\r\n                        {this.props.weather.temperature} &deg;C\r\n                    </div>}\r\n                    {this.props.weather.description &&\r\n                    <div className=\"WeatherData__item WeatherData__item--description\">\r\n                        {this.props.weather.description}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"WeatherData__col WeatherData__col--details\">\r\n                    {this.props.weather.temp_min &&\r\n                    <div className=\"WeatherData__item\">\r\n                        Temperature(min): {this.props.weather.temp_min} &deg;C\r\n                    </div>}\r\n                    {this.props.weather.temp_max &&\r\n                    <div className=\"WeatherData__item\">\r\n                        Temperature(max): {this.props.weather.temp_max} &deg;C\r\n                    </div>}\r\n                    {this.props.weather.pressure &&\r\n                    <div className=\"WeatherData__item\">\r\n                        Pressure: {this.props.weather.pressure} hpa\r\n                    </div>}\r\n                    {this.props.weather.humidity &&\r\n                    <div className=\"WeatherData__item WeatherData__item--humidity\">\r\n                        Humidity: {this.props.weather.humidity} %\r\n                    </div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Weather;\r\n","import React, {Component} from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"WeatherApp__footer\">\r\n                <p>&copy; Aleksandra Półtorak</p>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Header from \"./components/Header\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nimport Footer from \"./components/Footer\";\nimport Loader from \"./components/Loader\";\n\nconst API_KEY = \"2b1eed97055779f4e575ab64e44e8761\";\n\nclass App extends React.Component {\n    state = {\n        weather: {\n            city: undefined,\n            country: undefined,\n            temperature: undefined,\n            temp_min: undefined,\n            temp_max: undefined,\n            pressure: undefined,\n            humidity: undefined,\n            description: undefined,\n            icon: undefined\n        },\n        error: undefined\n    };\n\n    getWeather = async (e) => {\n        e.preventDefault();\n        const city = e.target.elements.city.value;\n        const country = e.target.elements.country.value;\n        if (city && country) {\n            const apiCall = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n            const data = await apiCall.json();\n            if(data.hasOwnProperty(\"cod\") && data.cod === \"404\"){\n                this.setState({\n                    weather: {\n                        city: undefined,\n                        country: undefined,\n                        temperature: undefined,\n                        temp_min: undefined,\n                        temp_max: undefined,\n                        pressure: undefined,\n                        humidity: undefined,\n                        description: undefined,\n                        icon: undefined\n                    },\n                    error: \"Cannot find this location. Please enter valid data.\"\n                });\n            } else{\n                console.log(data);\n                this.setState({\n                    weather: {\n                        city: data.name,\n                        country: data.sys.country,\n                        temperature: data.main.temp,\n                        temp_min: data.main.temp_min,\n                        temp_max: data.main.temp_max,\n                        pressure: data.main.pressure,\n                        humidity: data.main.humidity,\n                        description: data.weather[0].description,\n                        icon: data.weather[0].icon\n                    },\n                    error: undefined\n                });\n            }\n\n        } else {\n            this.setState({\n                weather: {\n                    city: undefined,\n                    country: undefined,\n                    temperature: undefined,\n                    temp_min: undefined,\n                    temp_max: undefined,\n                    pressure: undefined,\n                    humidity: undefined,\n                    description: undefined,\n                    icon: undefined\n                },\n                error: \"Please enter both values.\"\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"WeatherApp\">\n                <Header/>\n                <div className=\"WeatherApp__content\">\n                    <Form getWeather={this.getWeather}/>\n                    <Weather weather={this.state.weather} error={this.state.error}/>\n                </div>\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React, {Component} from 'react';\r\nimport logo from '../logo.svg';\r\nimport '../App.css';\r\n\r\nclass Loader extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"WeatherApp__loader\">\r\n                {this.props.isLoading && <p>Loading...</p>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loader;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}